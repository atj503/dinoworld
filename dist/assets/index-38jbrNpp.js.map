{"version":3,"file":"index-38jbrNpp.js","sources":["../../node_modules/three/examples/jsm/libs/fflate.module.js","../../node_modules/three/examples/jsm/curves/NURBSUtils.js","../../node_modules/three/examples/jsm/curves/NURBSCurve.js","../../node_modules/three/examples/jsm/loaders/FBXLoader.js","../../src/enemy.js","../../src/main.js","../../src/ui.js","../../src/level.js","../../src/player.js"],"sourcesContent":["/*!\nfflate - fast JavaScript compression/decompression\n<https://101arrowz.github.io/fflate>\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\nversion 0.6.9\n*/\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar durl = function (c) { return URL.createObjectURL(new Blob([c], { type: 'text/javascript' })); };\nvar cwk = function (u) { return new Worker(u); };\ntry {\n    URL.revokeObjectURL(durl(''));\n}\ncatch (e) {\n    // We're in Deno or a very old browser\n    durl = function (c) { return 'data:application/javascript;charset=UTF-8,' + encodeURI(c); };\n    // If Deno, this is necessary; if not, this changes nothing\n    cwk = function (u) { return new Worker(u, { type: 'module' }); };\n}\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = cwk(ch2[id] || (ch2[id] = durl(c)));\n    w.onerror = function (e) { return cb(e.error, null); };\n    w.onmessage = function (e) { return cb(null, e.data); };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i)\n        ++l[cd[i] - 1];\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p / 8) | 0) + (p & 7 && 1); };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && !st.l && sl < 5))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e < s) {\n                // write full block\n                pos = wfblk(w, pos, dat.subarray(i, e));\n            }\n            else {\n                // write final block\n                w[i] = lst;\n                pos = wfblk(w, pos, dat.subarray(i, s));\n            }\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new u32(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && 0xEDB88320) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32)\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, hMap, max, bits, bits16, shft, slc, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (t)\n            throw 'stream finished';\n        if (!strm.ondata)\n            throw 'no stream handler';\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        throw 'invalid gzip data';\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                throw 'invalid gzip stream';\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                throw 'invalid zlib stream';\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no stream handler';\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k;\n        if (val instanceof u8)\n            t[n] = [val, o];\n        else if (Array.isArray(val))\n            t[n] = [val[0], mrg(o, val[1])];\n        else\n            fltn(val, n + '/', t, o);\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    throw 'invalid utf-8 data';\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            throw 'stream finished';\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                throw 'invalid utf-8 data';\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        if (this.d)\n            throw 'stream finished';\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            throw 'invalid utf-8 data';\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                throw 'extra field too long';\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        throw 'date not in range 1980-2099';\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback - add to ZIP archive before pushing';\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (this.d & 2)\n            throw 'stream finished';\n        var f = strToU8(file.filename), fl = f.length;\n        var com = file.comment, o = com && strToU8(com);\n        var u = fl != file.filename.length || (o && (com.length != o.length));\n        var hl = fl + exfl(file.extra) + 30;\n        if (fl > 65535)\n            throw 'filename too long';\n        var header = new u8(hl);\n        wzh(header, 0, file, f, u);\n        var chks = [header];\n        var pAll = function () {\n            for (var _i = 0, chks_1 = chks; _i < chks_1.length; _i++) {\n                var chk = chks_1[_i];\n                _this_1.ondata(null, chk, false);\n            }\n            chks = [];\n        };\n        var tr = this.d;\n        this.d = 0;\n        var ind = this.u.length;\n        var uf = mrg(file, {\n            f: f,\n            u: u,\n            o: o,\n            t: function () {\n                if (file.terminate)\n                    file.terminate();\n            },\n            r: function () {\n                pAll();\n                if (tr) {\n                    var nxt = _this_1.u[ind + 1];\n                    if (nxt)\n                        nxt.r();\n                    else\n                        _this_1.d = 1;\n                }\n                tr = 1;\n            }\n        });\n        var cl = 0;\n        file.ondata = function (err, dat, final) {\n            if (err) {\n                _this_1.ondata(err, dat, final);\n                _this_1.terminate();\n            }\n            else {\n                cl += dat.length;\n                chks.push(dat);\n                if (final) {\n                    var dd = new u8(16);\n                    wbytes(dd, 0, 0x8074B50);\n                    wbytes(dd, 4, file.crc);\n                    wbytes(dd, 8, cl);\n                    wbytes(dd, 12, file.size);\n                    chks.push(dd);\n                    uf.c = cl, uf.b = hl + cl + 16, uf.crc = file.crc, uf.size = file.size;\n                    if (tr)\n                        uf.r();\n                    tr = 1;\n                }\n                else if (tr)\n                    pAll();\n            }\n        };\n        this.u.push(uf);\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            if (this.d & 1)\n                throw 'stream finishing';\n            throw 'stream finished';\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cb(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cb(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl('filename too long', null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            throw 'filename too long';\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, data, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            throw 'no callback';\n        if (!this.p)\n            throw 'stream finished';\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_2 = [];\n                        this_1.k.unshift(chks_2);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    throw 'no callback';\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        throw 'unknown compression type ' + cmp_1;\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_3 = chks_2; _i < chks_3.length; _i++) {\n                                        var dat = chks_3[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_2 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                throw 'invalid zip file';\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\n/**\n * Asynchronously decompresses a ZIP archive\n * @param data The raw compressed ZIP file\n * @param cb The callback to call with the decompressed files\n * @returns A function that can be used to immediately terminate the unzipping\n */\nexport function unzip(data, cb) {\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cb('invalid zip file', null);\n            return;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (!lft)\n        cb(null, {});\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50) {\n            cb('invalid zip file', null);\n            return;\n        }\n        c = lft = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var _loop_3 = function (i) {\n        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                files[fn] = d;\n                if (!--lft)\n                    cb(null, files);\n            }\n        };\n        if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n        else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (sc < 320000) {\n                try {\n                    cbl(null, inflateSync(infl, new u8(su)));\n                }\n                catch (e) {\n                    cbl(e, null);\n                }\n            }\n            else\n                term.push(inflate(infl, { size: su }, cbl));\n        }\n        else\n            cbl('unknown compression type ' + c_1, null);\n    };\n    for (var i = 0; i < c; ++i) {\n        _loop_3(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @returns The decompressed files\n */\nexport function unzipSync(data) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            throw 'invalid zip file';\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            throw 'invalid zip file';\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!c_2)\n            files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n            files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n        else\n            throw 'unknown compression type ' + c_2;\n    }\n    return files;\n}\n","import {\n\tVector3,\n\tVector4\n} from 'three';\n\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\n/*\nFinds knot vector span.\n\np : degree\nu : parametric value\nU : knot vector\n\nreturns the span\n*/\nfunction findSpan( p, u, U ) {\n\n\tconst n = U.length - p - 1;\n\n\tif ( u >= U[ n ] ) {\n\n\t\treturn n - 1;\n\n\t}\n\n\tif ( u <= U[ p ] ) {\n\n\t\treturn p;\n\n\t}\n\n\tlet low = p;\n\tlet high = n;\n\tlet mid = Math.floor( ( low + high ) / 2 );\n\n\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\tif ( u < U[ mid ] ) {\n\n\t\t\thigh = mid;\n\n\t\t} else {\n\n\t\t\tlow = mid;\n\n\t\t}\n\n\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t}\n\n\treturn mid;\n\n}\n\n\n/*\nCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nU    : knot vector\n\nreturns array[p+1] with basis functions values.\n*/\nfunction calcBasisFunctions( span, u, p, U ) {\n\n\tconst N = [];\n\tconst left = [];\n\tconst right = [];\n\tN[ 0 ] = 1.0;\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tconst temp = N[ r ] / ( rv + lv );\n\t\t\tN[ r ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tN[ j ] = saved;\n\n\t}\n\n\treturn N;\n\n}\n\n\n/*\nCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\np : degree of B-Spline\nU : knot vector\nP : control points (x, y, z, w)\nu : parametric point\n\nreturns point for given u\n*/\nfunction calcBSplinePoint( p, U, P, u ) {\n\n\tconst span = findSpan( p, u, U );\n\tconst N = calcBasisFunctions( span, u, p, U );\n\tconst C = new Vector4( 0, 0, 0, 0 );\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tconst point = P[ span - p + j ];\n\t\tconst Nj = N[ j ];\n\t\tconst wNj = point.w * Nj;\n\t\tC.x += point.x * wNj;\n\t\tC.y += point.y * wNj;\n\t\tC.z += point.z * wNj;\n\t\tC.w += point.w * Nj;\n\n\t}\n\n\treturn C;\n\n}\n\n\n/*\nCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nn    : number of derivatives to calculate\nU    : knot vector\n\nreturns array[n+1][p+1] with basis functions derivatives\n*/\nfunction calcBasisFunctionDerivatives( span, u, p, n, U ) {\n\n\tconst zeroArr = [];\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tzeroArr[ i ] = 0.0;\n\n\tconst ders = [];\n\n\tfor ( let i = 0; i <= n; ++ i )\n\t\tders[ i ] = zeroArr.slice( 0 );\n\n\tconst ndu = [];\n\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\tndu[ 0 ][ 0 ] = 1.0;\n\n\tconst left = zeroArr.slice( 0 );\n\tconst right = zeroArr.slice( 0 );\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\tconst temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tndu[ j ][ j ] = saved;\n\n\t}\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t}\n\n\tfor ( let r = 0; r <= p; ++ r ) {\n\n\t\tlet s1 = 0;\n\t\tlet s2 = 1;\n\n\t\tconst a = [];\n\t\tfor ( let i = 0; i <= p; ++ i ) {\n\n\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t}\n\n\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\t\tlet d = 0.0;\n\t\t\tconst rk = r - k;\n\t\t\tconst pk = p - k;\n\n\t\t\tif ( r >= k ) {\n\n\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t}\n\n\t\t\tconst j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\tconst j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\tfor ( let j = j1; j <= j2; ++ j ) {\n\n\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t}\n\n\t\t\tif ( r <= pk ) {\n\n\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t}\n\n\t\t\tders[ k ][ r ] = d;\n\n\t\t\tconst j = s1;\n\t\t\ts1 = s2;\n\t\t\ts2 = j;\n\n\t\t}\n\n\t}\n\n\tlet r = p;\n\n\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ k ][ j ] *= r;\n\n\t\t}\n\n\t\tr *= p - k;\n\n\t}\n\n\treturn ders;\n\n}\n\n\n/*\n\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points\n\tu  : Parametric points\n\tnd : number of derivatives\n\n\treturns array[d+1] with derivatives\n\t*/\nfunction calcBSplineDerivatives( p, U, P, u, nd ) {\n\n\tconst du = nd < p ? nd : p;\n\tconst CK = [];\n\tconst span = findSpan( p, u, U );\n\tconst nders = calcBasisFunctionDerivatives( span, u, p, du, U );\n\tconst Pw = [];\n\n\tfor ( let i = 0; i < P.length; ++ i ) {\n\n\t\tconst point = P[ i ].clone();\n\t\tconst w = point.w;\n\n\t\tpoint.x *= w;\n\t\tpoint.y *= w;\n\t\tpoint.z *= w;\n\n\t\tPw[ i ] = point;\n\n\t}\n\n\tfor ( let k = 0; k <= du; ++ k ) {\n\n\t\tconst point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = point;\n\n\t}\n\n\tfor ( let k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate \"K over I\"\n\nreturns k!/(i!(k-i)!)\n*/\nfunction calcKoverI( k, i ) {\n\n\tlet nom = 1;\n\n\tfor ( let j = 2; j <= k; ++ j ) {\n\n\t\tnom *= j;\n\n\t}\n\n\tlet denom = 1;\n\n\tfor ( let j = 2; j <= i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\tfor ( let j = 2; j <= k - i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\treturn nom / denom;\n\n}\n\n\n/*\nCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\nPders : result of function calcBSplineDerivatives\n\nreturns array with derivatives for rational curve.\n*/\nfunction calcRationalCurveDerivatives( Pders ) {\n\n\tconst nd = Pders.length;\n\tconst Aders = [];\n\tconst wders = [];\n\n\tfor ( let i = 0; i < nd; ++ i ) {\n\n\t\tconst point = Pders[ i ];\n\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\twders[ i ] = point.w;\n\n\t}\n\n\tconst CK = [];\n\n\tfor ( let k = 0; k < nd; ++ k ) {\n\n\t\tconst v = Aders[ k ].clone();\n\n\t\tfor ( let i = 1; i <= k; ++ i ) {\n\n\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\np  : degree\nU  : knot vector\nP  : control points in homogeneous space\nu  : parametric points\nnd : number of derivatives\n\nreturns array with derivatives.\n*/\nfunction calcNURBSDerivatives( p, U, P, u, nd ) {\n\n\tconst Pders = calcBSplineDerivatives( p, U, P, u, nd );\n\treturn calcRationalCurveDerivatives( Pders );\n\n}\n\n\n/*\nCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\np, q : degrees of B-Spline surface\nU, V : knot vectors\nP    : control points (x, y, z, w)\nu, v : parametric values\n\nreturns point for given (u, v)\n*/\nfunction calcSurfacePoint( p, q, U, V, P, u, v, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst temp = [];\n\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\tconst w = point.w;\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t}\n\n\t}\n\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n/*\nCalculate rational B-Spline volume point. See The NURBS Book, page 134, algorithm A4.3.\n\np, q, r   : degrees of B-Splinevolume\nU, V, W   : knot vectors\nP         : control points (x, y, z, w)\nu, v, w   : parametric values\n\nreturns point for given (u, v, w)\n*/\nfunction calcVolumePoint( p, q, r, U, V, W, P, u, v, w, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst wspan = findSpan( r, w, W );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst Nw = calcBasisFunctions( wspan, w, r, W );\n\tconst temp = [];\n\n\tfor ( let m = 0; m <= r; ++ m ) {\n\n\t\ttemp[ m ] = [];\n\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ m ][ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ][ wspan - r + m ].clone();\n\t\t\t\tconst w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ m ][ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let m = 0; m <= r; ++ m ) {\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ m ][ l ].multiplyScalar( Nw[ m ] ).multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n\nexport {\n\tfindSpan,\n\tcalcBasisFunctions,\n\tcalcBSplinePoint,\n\tcalcBasisFunctionDerivatives,\n\tcalcBSplineDerivatives,\n\tcalcKoverI,\n\tcalcRationalCurveDerivatives,\n\tcalcNURBSDerivatives,\n\tcalcSurfacePoint,\n\tcalcVolumePoint,\n};\n","import {\n\tCurve,\n\tVector3,\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n\n\tconstructor(\n\t\tdegree,\n\t\tknots /* array of reals */,\n\t\tcontrolPoints /* array of Vector(2|3|4) */,\n\t\tstartKnot /* index in knots */,\n\t\tendKnot /* index in knots */\n\t) {\n\n\t\tsuper();\n\n\t\tthis.degree = degree;\n\t\tthis.knots = knots;\n\t\tthis.controlPoints = [];\n\t\t// Used by periodic NURBS to remove hidden spans\n\t\tthis.startKnot = startKnot || 0;\n\t\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\n\t\tfor ( let i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t\t// ensure Vector4 for control points\n\t\t\tconst point = controlPoints[ i ];\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t}\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t\t// following results in (wx, wy, wz, w) homogeneous point\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\t\tif ( hpoint.w !== 1.0 ) {\n\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\t\thpoint.divideScalar( hpoint.w );\n\n\t\t}\n\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\tconst tangent = optionalTarget;\n\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\t\ttangent.copy( ders[ 1 ] ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n}\n\nexport { NURBSCurve };\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector2,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace,\n\tShapeUtils\n} from 'three';\nimport * as fflate from '../libs/fflate.module.js';\nimport { NURBSCurve } from '../curves/NURBSCurve.js';\n\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * Binary format specification:\n *\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nlet fbxTree;\nlet connections;\nlet sceneGraph;\n\nclass FBXLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( FBXBuffer, path ) {\n\n\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t} else {\n\n\t\t\tconst FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t}\n\n\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t}\n\n\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t}\n\n\t\t// console.log( fbxTree );\n\n\t\tconst textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t}\n\n}\n\n// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\nclass FBXTreeParser {\n\n\tconstructor( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tparse() {\n\n\t\tconnections = this.parseConnections();\n\n\t\tconst images = this.parseImages();\n\t\tconst textures = this.parseTextures( images );\n\t\tconst materials = this.parseMaterials( textures );\n\t\tconst deformers = this.parseDeformers();\n\t\tconst geometryMap = new GeometryParser().parse( deformers );\n\n\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\treturn sceneGraph;\n\n\t}\n\n\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t// and details the connection type\n\tparseConnections() {\n\n\t\tconst connectionMap = new Map();\n\n\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\tconst rawConnections = fbxTree.Connections.connections;\n\n\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\tconst fromID = rawConnection[ 0 ];\n\t\t\t\tconst toID = rawConnection[ 1 ];\n\t\t\t\tconst relationship = rawConnection[ 2 ];\n\n\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn connectionMap;\n\n\t}\n\n\t// Parse FBXTree.Objects.Video for embedded image data\n\t// These images are connected to textures in FBXTree.Objects.Textures\n\t// via FBXTree.Connections.\n\tparseImages() {\n\n\t\tconst images = {};\n\t\tconst blobs = {};\n\n\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\tconst videoNodes = fbxTree.Objects.Video;\n\n\t\t\tfor ( const nodeID in videoNodes ) {\n\n\t\t\t\tconst videoNode = videoNodes[ nodeID ];\n\n\t\t\t\tconst id = parseInt( nodeID );\n\n\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\tconst arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\tconst base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\tconst image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( const id in images ) {\n\n\t\t\tconst filename = images[ id ];\n\n\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\t// Parse embedded image data in FBXTree.Video.Content\n\tparseImage( videoNode ) {\n\n\t\tconst content = videoNode.Content;\n\t\tconst fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\tconst extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\tlet type;\n\n\t\tswitch ( extension ) {\n\n\t\t\tcase 'bmp':\n\n\t\t\t\ttype = 'image/bmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\n\t\t\t\ttype = 'image/jpeg';\n\t\t\t\tbreak;\n\n\t\t\tcase 'png':\n\n\t\t\t\ttype = 'image/png';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tif':\n\n\t\t\t\ttype = 'image/tiff';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tga':\n\n\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t}\n\n\t\t\t\ttype = 'image/tga';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t} else { // Binary Format\n\n\t\t\tconst array = new Uint8Array( content );\n\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t}\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Texture\n\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t// to images in FBXTree.Objects.Video\n\tparseTextures( images ) {\n\n\t\tconst textureMap = new Map();\n\n\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\tconst textureNodes = fbxTree.Objects.Texture;\n\t\t\tfor ( const nodeID in textureNodes ) {\n\n\t\t\t\tconst texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textureMap;\n\n\t}\n\n\t// Parse individual node in FBXTree.Objects.Texture\n\tparseTexture( textureNode, images ) {\n\n\t\tconst texture = this.loadTexture( textureNode, images );\n\n\t\ttexture.ID = textureNode.id;\n\n\t\ttexture.name = textureNode.attrName;\n\n\t\tconst wrapModeU = textureNode.WrapModeU;\n\t\tconst wrapModeV = textureNode.WrapModeV;\n\n\t\tconst valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\tconst valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t// 0: repeat(default), 1: clamp\n\n\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\tconst values = textureNode.Scaling.value;\n\n\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t}\n\n\t\tif ( 'Translation' in textureNode ) {\n\n\t\t\tconst values = textureNode.Translation.value;\n\n\t\t\ttexture.offset.x = values[ 0 ];\n\t\t\ttexture.offset.y = values[ 1 ];\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\tloadTexture( textureNode, images ) {\n\n\t\tlet fileName;\n\n\t\tconst currentPath = this.textureLoader.path;\n\n\t\tconst children = connections.get( textureNode.id ).children;\n\n\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet texture;\n\n\t\tconst extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\tif ( extension === 'tga' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.tga' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'dds' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.dds' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: DDS loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'psd' ) {\n\n\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\ttexture = new Texture();\n\n\t\t} else {\n\n\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t}\n\n\t\tthis.textureLoader.setPath( currentPath );\n\n\t\treturn texture;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Material\n\tparseMaterials( textureMap ) {\n\n\t\tconst materialMap = new Map();\n\n\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\tconst materialNodes = fbxTree.Objects.Material;\n\n\t\t\tfor ( const nodeID in materialNodes ) {\n\n\t\t\t\tconst material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materialMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Material\n\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t// FBX format currently only supports Lambert and Phong shading models\n\tparseMaterial( materialNode, textureMap ) {\n\n\t\tconst ID = materialNode.id;\n\t\tconst name = materialNode.attrName;\n\t\tlet type = materialNode.ShadingModel;\n\n\t\t// Case where FBX wraps shading model in property object.\n\t\tif ( typeof type === 'object' ) {\n\n\t\t\ttype = type.value;\n\n\t\t}\n\n\t\t// Ignore unused materials which don't have any connections.\n\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\tconst parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\tlet material;\n\n\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\tcase 'phong':\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\t\t\tcase 'lambert':\n\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tmaterial.setValues( parameters );\n\t\tmaterial.name = name;\n\n\t\treturn material;\n\n\t}\n\n\t// Parse FBX material and return parameters suitable for a three.js material\n\t// Also parse the texture map and return any textures associated with the material\n\tparseParameters( materialNode, textureMap, ID ) {\n\n\t\tconst parameters = {};\n\n\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Diffuse ) {\n\n\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Emissive ) {\n\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t}\n\n\t\tif ( materialNode.Opacity ) {\n\n\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t}\n\n\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\tparameters.transparent = true;\n\n\t\t}\n\n\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Shininess ) {\n\n\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t}\n\n\t\tif ( materialNode.Specular ) {\n\n\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tconst scope = this;\n\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\tconst type = child.relationship;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'Bump':\n\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DiffuseColor':\n\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.map !== undefined ) {\n\n\t\t\t\t\t\tparameters.map.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.emissiveMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.emissiveMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NormalMap':\n\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.envMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.specularMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.specularMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TransparentColor':\n\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientColor':\n\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn parameters;\n\n\t}\n\n\t// get a texture from the textureMap for use by a material.\n\tgetTexture( textureMap, id ) {\n\n\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t}\n\n\t\treturn textureMap.get( id );\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Deformer\n\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\tparseDeformers() {\n\n\t\tconst skeletons = {};\n\t\tconst morphTargets = {};\n\n\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\tconst DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\tfor ( const nodeID in DeformerNodes ) {\n\n\t\t\t\tconst deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\tconst skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\tconst morphTarget = {\n\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t};\n\n\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tskeletons: skeletons,\n\t\t\tmorphTargets: morphTargets,\n\n\t\t};\n\n\t}\n\n\t// Parse single nodes in FBXTree.Objects.Deformer\n\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t// Each skin node represents a skeleton and each cluster node represents a bone\n\tparseSkeleton( relationships, deformerNodes ) {\n\n\t\tconst rawBones = [];\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst boneNode = deformerNodes[ child.ID ];\n\n\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\tconst rawBone = {\n\n\t\t\t\tID: child.ID,\n\t\t\t\tindices: [],\n\t\t\t\tweights: [],\n\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t};\n\n\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t}\n\n\t\t\trawBones.push( rawBone );\n\n\t\t} );\n\n\t\treturn {\n\n\t\t\trawBones: rawBones,\n\t\t\tbones: []\n\n\t\t};\n\n\t}\n\n\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\tparseMorphTargets( relationships, deformerNodes ) {\n\n\t\tconst rawMorphTargets = [];\n\n\t\tfor ( let i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\tconst child = relationships.children[ i ];\n\n\t\t\tconst morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\tconst rawMorphTarget = {\n\n\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\tid: morphTargetNode.id,\n\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t};\n\n\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t} )[ 0 ].ID;\n\n\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t}\n\n\t\treturn rawMorphTargets;\n\n\t}\n\n\t// create the main Group() to be returned by the loader\n\tparseScene( deformers, geometryMap, materialMap ) {\n\n\t\tsceneGraph = new Group();\n\n\t\tconst modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tconst scope = this;\n\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\tconst modelNode = modelNodes[ model.ID ];\n\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\tconst parentConnections = connections.get( model.ID ).parents;\n\n\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\tconst parent = modelMap.get( connection.ID );\n\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t} );\n\n\t\t\tif ( model.parent === null ) {\n\n\t\t\t\tsceneGraph.add( model );\n\n\t\t\t}\n\n\n\t\t} );\n\n\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\tthis.addGlobalSceneSettings();\n\n\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\tif ( node.parent ) {\n\n\t\t\t\t\tnode.userData.transformData.parentMatrix = node.parent.matrix;\n\t\t\t\t\tnode.userData.transformData.parentMatrixWorld = node.parent.matrixWorld;\n\n\t\t\t\t}\n\n\t\t\t\tconst transform = generateTransform( node.userData.transformData );\n\n\t\t\t\tnode.applyMatrix4( transform );\n\t\t\t\tnode.updateWorldMatrix();\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst animations = new AnimationParser().parse();\n\n\t\t// if all the models where already combined in a single group, just return that\n\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t}\n\n\t\tsceneGraph.animations = animations;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.Model\n\tparseModels( skeletons, geometryMap, materialMap ) {\n\n\t\tconst modelMap = new Map();\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tfor ( const nodeID in modelNodes ) {\n\n\t\t\tconst id = parseInt( nodeID );\n\t\t\tconst node = modelNodes[ nodeID ];\n\t\t\tconst relationships = connections.get( id );\n\n\t\t\tlet model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\tif ( ! model ) {\n\n\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Null':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\t\t\t\tmodel.userData.originalName = node.attrName;\n\n\t\t\t\tmodel.ID = id;\n\n\t\t\t}\n\n\t\t\tthis.getTransformData( model, node );\n\t\t\tmodelMap.set( id, model );\n\n\t\t}\n\n\t\treturn modelMap;\n\n\t}\n\n\tbuildSkeleton( relationships, skeletons, id, name ) {\n\n\t\tlet bone = null;\n\n\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\tfor ( const ID in skeletons ) {\n\n\t\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\tconst subBone = bone;\n\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\tbone.userData.originalName = name;\n\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn bone;\n\n\t}\n\n\t// create a PerspectiveCamera or OrthographicCamera\n\tcreateCamera( relationships ) {\n\n\t\tlet model;\n\t\tlet cameraAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tcameraAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type = 0;\n\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\ttype = 1;\n\n\t\t\t}\n\n\t\t\tlet nearClippingPlane = 1;\n\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t}\n\n\t\t\tlet farClippingPlane = 1000;\n\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t}\n\n\n\t\t\tlet width = window.innerWidth;\n\t\t\tlet height = window.innerHeight;\n\n\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t}\n\n\t\t\tconst aspect = width / height;\n\n\t\t\tlet fov = 45;\n\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t}\n\n\t\t\tconst focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Perspective\n\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\t// Create a DirectionalLight, PointLight or SpotLight\n\tcreateLight( relationships ) {\n\n\t\tlet model;\n\t\tlet lightAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tlightAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( lightAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type;\n\n\t\t\t// LightType can be undefined for Point lights\n\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\ttype = 0;\n\n\t\t\t} else {\n\n\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t}\n\n\t\t\tlet color = 0xffffff;\n\n\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value ).convertSRGBToLinear();\n\n\t\t\t}\n\n\t\t\tlet intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t// light disabled\n\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\tintensity = 0;\n\n\t\t\t}\n\n\t\t\tlet distance = 0;\n\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\tdistance = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\tconst decay = 1;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Point\n\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Directional\n\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // Spot\n\t\t\t\t\tlet angle = Math.PI / 3;\n\n\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet penumbra = 0;\n\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\tmodel.castShadow = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateMesh( relationships, geometryMap, materialMap ) {\n\n\t\tlet model;\n\t\tlet geometry = null;\n\t\tlet material = null;\n\t\tconst materials = [];\n\n\t\t// get geometry and materials(s) from connections\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t}\n\n\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( materials.length > 1 ) {\n\n\t\t\tmaterial = materials;\n\n\t\t} else if ( materials.length > 0 ) {\n\n\t\t\tmaterial = materials[ 0 ];\n\n\t\t} else {\n\n\t\t\tmaterial = new MeshPhongMaterial( {\n\t\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\t\tcolor: 0xcccccc\n\t\t\t} );\n\t\t\tmaterials.push( material );\n\n\t\t}\n\n\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\tmodel.normalizeSkinWeights();\n\n\t\t} else {\n\n\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateCurve( relationships, geometryMap ) {\n\n\t\tconst geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\treturn geo;\n\n\t\t}, null );\n\n\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\tconst material = new LineBasicMaterial( {\n\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\tcolor: 0x3300ff,\n\t\t\tlinewidth: 1\n\t\t} );\n\t\treturn new Line( geometry, material );\n\n\t}\n\n\t// parse the model node for transform data\n\tgetTransformData( model, modelNode ) {\n\n\t\tconst transformData = {};\n\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\tmodel.userData.transformData = transformData;\n\n\t}\n\n\tsetLookAtProperties( model, modelNode ) {\n\n\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\tconst children = connections.get( model.ID ).children;\n\n\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\tconst lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\tconst pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tbindSkeleton( skeletons, geometryMap, modelMap ) {\n\n\t\tconst bindMatrices = this.parsePoseNodes();\n\n\t\tfor ( const ID in skeletons ) {\n\n\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\tconst parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\tconst geoID = parent.ID;\n\t\t\t\t\tconst geoRelationships = connections.get( geoID );\n\n\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\tconst model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tparsePoseNodes() {\n\n\t\tconst bindMatrices = {};\n\n\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\tconst BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\tfor ( const nodeID in BindPoseNode ) {\n\n\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' && BindPoseNode[ nodeID ].NbPoseNodes > 0 ) {\n\n\t\t\t\t\tconst poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bindMatrices;\n\n\t}\n\n\taddGlobalSceneSettings() {\n\n\t\tif ( 'GlobalSettings' in fbxTree ) {\n\n\t\t\tif ( 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\t// Parse ambient color - if it's not set to black (default), create an ambient light\n\n\t\t\t\tconst ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tconst r = ambientColor[ 0 ];\n\t\t\t\tconst g = ambientColor[ 1 ];\n\t\t\t\tconst b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tconst color = new Color( r, g, b ).convertSRGBToLinear();\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( 'UnitScaleFactor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tsceneGraph.userData.unitScaleFactor = fbxTree.GlobalSettings.UnitScaleFactor.value;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse Geometry data from FBXTree and return map of BufferGeometries\nclass GeometryParser {\n\n\tconstructor() {\n\n\t\tthis.negativeMaterialIndices = false;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Geometry\n\tparse( deformers ) {\n\n\t\tconst geometryMap = new Map();\n\n\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\tconst geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\tfor ( const nodeID in geoNodes ) {\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\tconst geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// report warnings\n\n\t\tif ( this.negativeMaterialIndices === true ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected.' );\n\n\t\t}\n\n\t\treturn geometryMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Geometry\n\tparseGeometry( relationships, geoNode, deformers ) {\n\n\t\tswitch ( geoNode.attrType ) {\n\n\t\t\tcase 'Mesh':\n\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\tbreak;\n\n\t\t\tcase 'NurbsCurve':\n\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\tparseMeshGeometry( relationships, geoNode, deformers ) {\n\n\t\tconst skeletons = deformers.skeletons;\n\t\tconst morphTargets = [];\n\n\t\tconst modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t} );\n\n\t\t// don't create geometry if it is not associated with any models\n\t\tif ( modelNodes.length === 0 ) return;\n\n\t\tconst skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\treturn skeleton;\n\n\t\t}, null );\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// Assume one model and get the preRotation from that\n\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\tconst modelNode = modelNodes[ 0 ];\n\n\t\tconst transformData = {};\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\tconst transform = generateTransform( transformData );\n\n\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t}\n\n\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\tgenGeometry( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\tconst geo = new BufferGeometry();\n\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\tconst geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\tconst buffers = this.genBuffers( geoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t}\n\n\t\tif ( skeleton ) {\n\n\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t// used later to bind the skeleton to the model\n\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t}\n\n\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\tconst normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t}\n\n\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\tconst name = i === 0 ? 'uv' : `uv${ i }`;\n\n\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t} );\n\n\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\tlet prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\tlet startIndex = 0;\n\n\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\tconst lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\tconst lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t// using one of them\n\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\treturn geo;\n\n\t}\n\n\tparseGeoNode( geoNode, skeleton ) {\n\n\t\tconst geoInfo = {};\n\n\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\tgeoInfo.uv = [];\n\n\t\t\tlet i = 0;\n\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeoInfo.weightTable = {};\n\n\t\tif ( skeleton !== null ) {\n\n\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn geoInfo;\n\n\t}\n\n\tgenBuffers( geoInfo ) {\n\n\t\tconst buffers = {\n\t\t\tvertex: [],\n\t\t\tnormal: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\t\t\tmaterialIndex: [],\n\t\t\tvertexWeights: [],\n\t\t\tweightsIndices: [],\n\t\t};\n\n\t\tlet polygonIndex = 0;\n\t\tlet faceLength = 0;\n\t\tlet displayedWeightsWarning = false;\n\n\t\t// these will hold data for a single face\n\t\tlet facePositionIndexes = [];\n\t\tlet faceNormals = [];\n\t\tlet faceColors = [];\n\t\tlet faceUVs = [];\n\t\tlet faceWeights = [];\n\t\tlet faceWeightIndices = [];\n\n\t\tconst scope = this;\n\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\tlet materialIndex;\n\t\t\tlet endOfFace = false;\n\n\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t// A cube with quad faces looks like this:\n\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t//  }\n\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\tendOfFace = true;\n\n\t\t\t}\n\n\t\t\tlet weightIndices = [];\n\t\t\tlet weights = [];\n\n\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t} );\n\n\n\t\t\t\t}\n\n\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\tconst Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\tlet currentWeight = weight;\n\t\t\t\t\t\tlet currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\tconst tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\tweights = Weight;\n\n\t\t\t\t}\n\n\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tmaterialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\tif ( materialIndex < 0 ) {\n\n\t\t\t\t\tscope.negativeMaterialIndices = true;\n\t\t\t\t\tmaterialIndex = 0; // fallback\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfaceLength ++;\n\n\t\t\tif ( endOfFace ) {\n\n\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\tpolygonIndex ++;\n\t\t\t\tfaceLength = 0;\n\n\t\t\t\t// reset arrays for the next face\n\t\t\t\tfacePositionIndexes = [];\n\t\t\t\tfaceNormals = [];\n\t\t\t\tfaceColors = [];\n\t\t\t\tfaceUVs = [];\n\t\t\t\tfaceWeights = [];\n\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn buffers;\n\n\t}\n\n\t// See https://www.khronos.org/opengl/wiki/Calculating_a_Surface_Normal\n\tgetNormalNewell( vertices ) {\n\n\t\tconst normal = new Vector3( 0.0, 0.0, 0.0 );\n\n\t\tfor ( let i = 0; i < vertices.length; i ++ ) {\n\n\t\t\tconst current = vertices[ i ];\n\t\t\tconst next = vertices[ ( i + 1 ) % vertices.length ];\n\n\t\t\tnormal.x += ( current.y - next.y ) * ( current.z + next.z );\n\t\t\tnormal.y += ( current.z - next.z ) * ( current.x + next.x );\n\t\t\tnormal.z += ( current.x - next.x ) * ( current.y + next.y );\n\n\t\t}\n\n\t\tnormal.normalize();\n\n\t\treturn normal;\n\n\t}\n\n\tgetNormalTangentAndBitangent( vertices ) {\n\n\t\tconst normalVector = this.getNormalNewell( vertices );\n\t\t// Avoid up being equal or almost equal to normalVector\n\t\tconst up = Math.abs( normalVector.z ) > 0.5 ? new Vector3( 0.0, 1.0, 0.0 ) : new Vector3( 0.0, 0.0, 1.0 );\n\t\tconst tangent = up.cross( normalVector ).normalize();\n\t\tconst bitangent = normalVector.clone().cross( tangent ).normalize();\n\n\t\treturn {\n\t\t\tnormal: normalVector,\n\t\t\ttangent: tangent,\n\t\t\tbitangent: bitangent\n\t\t};\n\n\t}\n\n\tflattenVertex( vertex, normalTangent, normalBitangent ) {\n\n\t\treturn new Vector2(\n\t\t\tvertex.dot( normalTangent ),\n\t\t\tvertex.dot( normalBitangent )\n\t\t);\n\n\t}\n\n\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\tgenFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\tlet triangles;\n\n\t\tif ( faceLength > 3 ) {\n\n\t\t\t// Triangulate n-gon using earcut\n\n\t\t\tconst vertices = [];\n\n\t\t\tfor ( let i = 0; i < facePositionIndexes.length; i += 3 ) {\n\n\t\t\t\tvertices.push( new Vector3(\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i ] ],\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i + 1 ] ],\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i + 2 ] ]\n\t\t\t\t) );\n\n\t\t\t}\n\n\t\t\tconst { tangent, bitangent } = this.getNormalTangentAndBitangent( vertices );\n\t\t\tconst triangulationInput = [];\n\n\t\t\tfor ( const vertex of vertices ) {\n\n\t\t\t\ttriangulationInput.push( this.flattenVertex( vertex, tangent, bitangent ) );\n\n\t\t\t}\n\n\t\t\ttriangles = ShapeUtils.triangulateShape( triangulationInput, [] );\n\n\t\t} else {\n\n\t\t\t// Regular triangle, skip earcut triangulation step\n\t\t\ttriangles = [[ 0, 1, 2 ]];\n\n\t\t}\n\n\t\tfor ( const [ i0, i1, i2 ] of triangles ) {\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 2 ] ] );\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 3 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 + 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\taddMorphTargets( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\tif ( morphTargets.length === 0 ) return;\n\n\t\tparentGeo.morphTargetsRelative = true;\n\n\t\tparentGeo.morphAttributes.position = [];\n\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\tconst scope = this;\n\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\tconst morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\tgenMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\tconst vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\tconst morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\tconst indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\tconst length = parentGeo.attributes.position.count * 3;\n\t\tconst morphPositions = new Float32Array( length );\n\n\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\tconst morphIndex = indices[ i ] * 3;\n\n\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t}\n\n\t\t// TODO: add morph normal support\n\t\tconst morphGeoInfo = {\n\t\t\tvertexIndices: vertexIndices,\n\t\t\tvertexPositions: morphPositions,\n\n\t\t};\n\n\t\tconst morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t}\n\n\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\tparseNormals( NormalNode ) {\n\n\t\tconst mappingType = NormalNode.MappingInformationType;\n\t\tconst referenceType = NormalNode.ReferenceInformationType;\n\t\tconst buffer = NormalNode.Normals.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 3,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\tparseUVs( UVNode ) {\n\n\t\tconst mappingType = UVNode.MappingInformationType;\n\t\tconst referenceType = UVNode.ReferenceInformationType;\n\t\tconst buffer = UVNode.UV.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 2,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\tparseVertexColors( ColorNode ) {\n\n\t\tconst mappingType = ColorNode.MappingInformationType;\n\t\tconst referenceType = ColorNode.ReferenceInformationType;\n\t\tconst buffer = ColorNode.Colors.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t}\n\n\t\tfor ( let i = 0, c = new Color(); i < buffer.length; i += 4 ) {\n\n\t\t\tc.fromArray( buffer, i ).convertSRGBToLinear().toArray( buffer, i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 4,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\tparseMaterialIndices( MaterialNode ) {\n\n\t\tconst mappingType = MaterialNode.MappingInformationType;\n\t\tconst referenceType = MaterialNode.ReferenceInformationType;\n\n\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: [ 0 ],\n\t\t\t\tindices: [ 0 ],\n\t\t\t\tmappingType: 'AllSame',\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t}\n\n\t\tconst materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t// for conforming with the other functions we've written for other data.\n\t\tconst materialIndices = [];\n\n\t\tfor ( let i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\tmaterialIndices.push( i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 1,\n\t\t\tbuffer: materialIndexBuffer,\n\t\t\tindices: materialIndices,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\tparseNurbsGeometry( geoNode ) {\n\n\t\tconst order = parseInt( geoNode.Order );\n\n\t\tif ( isNaN( order ) ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst degree = order - 1;\n\n\t\tconst knots = geoNode.KnotVector.a;\n\t\tconst controlPoints = [];\n\t\tconst pointsValues = geoNode.Points.a;\n\n\t\tfor ( let i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t}\n\n\t\tlet startKnot, endKnot;\n\n\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\tstartKnot = degree;\n\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\tfor ( let i = 0; i < degree; ++ i ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\tconst points = curve.getPoints( controlPoints.length * 12 );\n\n\t\treturn new BufferGeometry().setFromPoints( points );\n\n\t}\n\n}\n\n// parse animation data from FBXTree\nclass AnimationParser {\n\n\t// take raw animation clips and turn them into three.js animation clips\n\tparse() {\n\n\t\tconst animationClips = [];\n\n\t\tconst rawClips = this.parseClips();\n\n\t\tif ( rawClips !== undefined ) {\n\n\t\t\tfor ( const key in rawClips ) {\n\n\t\t\t\tconst rawClip = rawClips[ key ];\n\n\t\t\t\tconst clip = this.addClip( rawClip );\n\n\t\t\t\tanimationClips.push( clip );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animationClips;\n\n\t}\n\n\tparseClips() {\n\n\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t// if this is undefined we can safely assume there are no animations\n\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\tconst curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\tconst layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\tconst rawClips = this.parseAnimStacks( layersMap );\n\n\t\treturn rawClips;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t// and is referenced by an AnimationLayer\n\tparseAnimationCurveNodes() {\n\n\t\tconst rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\tconst curveNodesMap = new Map();\n\n\t\tfor ( const nodeID in rawCurveNodes ) {\n\n\t\t\tconst rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\tconst curveNode = {\n\n\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\tcurves: {},\n\n\t\t\t\t};\n\n\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn curveNodesMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t// axis ( e.g. times and values of x rotation)\n\tparseAnimationCurves( curveNodesMap ) {\n\n\t\tconst rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t// clearly, this should be optimised to\n\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\tfor ( const nodeID in rawCurves ) {\n\n\t\t\tconst animationCurve = {\n\n\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t};\n\n\t\t\tconst relationships = connections.get( animationCurve.id );\n\n\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\tconst animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\tconst animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\tparseAnimationLayers( curveNodesMap ) {\n\n\t\tconst rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\tconst layersMap = new Map();\n\n\t\tfor ( const nodeID in rawLayers ) {\n\n\t\t\tconst layerCurveNodes = [];\n\n\t\t\tconst connection = connections.get( parseInt( nodeID ) );\n\n\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\tconst children = connection.children;\n\n\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\tconst curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\tconst geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\tconst modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn layersMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\tparseAnimStacks( layersMap ) {\n\n\t\tconst rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t// connect the stacks (clips) up to the layers\n\t\tconst rawClips = {};\n\n\t\tfor ( const nodeID in rawStacks ) {\n\n\t\t\tconst children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t}\n\n\t\t\tconst layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\tlayer: layer,\n\n\t\t\t};\n\n\t\t}\n\n\t\treturn rawClips;\n\n\t}\n\n\taddClip( rawClip ) {\n\n\t\tlet tracks = [];\n\n\t\tconst scope = this;\n\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t} );\n\n\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t}\n\n\tgenerateTracks( rawTracks ) {\n\n\t\tconst tracks = [];\n\n\t\tlet initialPosition = new Vector3();\n\t\tlet initialScale = new Vector3();\n\n\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, new Quaternion(), initialScale );\n\n\t\tinitialPosition = initialPosition.toArray();\n\t\tinitialScale = initialScale.toArray();\n\n\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\tconst positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\tconst rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\tconst scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\tconst morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\tgenerateVectorTrack( modelName, curves, initialValue, type ) {\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t}\n\n\tgenerateRotationTrack( modelName, curves, preRotation, postRotation, eulerOrder ) {\n\n\t\tlet times;\n\t\tlet values;\n\n\t\tif ( curves.x !== undefined && curves.y !== undefined && curves.z !== undefined ) {\n\n\t\t\tconst result = this.interpolateRotations( curves.x, curves.y, curves.z, eulerOrder );\n\n\t\t\ttimes = result[ 0 ];\n\t\t\tvalues = result[ 1 ];\n\n\t\t}\n\n\t\tif ( preRotation !== undefined ) {\n\n\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t}\n\n\t\tif ( postRotation !== undefined ) {\n\n\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\n\n\t\t}\n\n\t\tconst quaternion = new Quaternion();\n\t\tconst euler = new Euler();\n\n\t\tconst quaternionValues = [];\n\n\t\tif ( ! values || ! times ) return new QuaternionKeyframeTrack( modelName + '.quaternion', [], [] );\n\n\t\tfor ( let i = 0; i < values.length; i += 3 ) {\n\n\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t// Check unroll\n\t\t\tif ( i > 2 ) {\n\n\t\t\t\tconst prevQuat = new Quaternion().fromArray(\n\t\t\t\t\tquaternionValues,\n\t\t\t\t\t( ( i - 3 ) / 3 ) * 4\n\t\t\t\t);\n\n\t\t\t\tif ( prevQuat.dot( quaternion ) < 0 ) {\n\n\t\t\t\t\tquaternion.set( - quaternion.x, - quaternion.y, - quaternion.z, - quaternion.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t}\n\n\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t}\n\n\tgenerateMorphTrack( rawTracks ) {\n\n\t\tconst curves = rawTracks.DeformPercent.curves.morph;\n\t\tconst values = curves.values.map( function ( val ) {\n\n\t\t\treturn val / 100;\n\n\t\t} );\n\n\t\tconst morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t}\n\n\t// For all animated objects, times are defined separately for each axis\n\t// Here we'll combine the times into one sorted array without duplicates\n\tgetTimesForAllAxes( curves ) {\n\n\t\tlet times = [];\n\n\t\t// first join together the times for each axis, if defined\n\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t// then sort them\n\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t} );\n\n\t\t// and remove duplicates\n\t\tif ( times.length > 1 ) {\n\n\t\t\tlet targetIndex = 1;\n\t\t\tlet lastValue = times[ 0 ];\n\t\t\tfor ( let i = 1; i < times.length; i ++ ) {\n\n\t\t\t\tconst currentValue = times[ i ];\n\t\t\t\tif ( currentValue !== lastValue ) {\n\n\t\t\t\t\ttimes[ targetIndex ] = currentValue;\n\t\t\t\t\tlastValue = currentValue;\n\t\t\t\t\ttargetIndex ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttimes = times.slice( 0, targetIndex );\n\n\t\t}\n\n\t\treturn times;\n\n\t}\n\n\tgetKeyframeTrackValues( times, curves, initialValue ) {\n\n\t\tconst prevValue = initialValue;\n\n\t\tconst values = [];\n\n\t\tlet xIndex = - 1;\n\t\tlet yIndex = - 1;\n\t\tlet zIndex = - 1;\n\n\t\ttimes.forEach( function ( time ) {\n\n\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t// if there is an x value defined for this frame, use that\n\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\tconst xValue = curves.x.values[ xIndex ];\n\t\t\t\tvalues.push( xValue );\n\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\tconst yValue = curves.y.values[ yIndex ];\n\t\t\t\tvalues.push( yValue );\n\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t}\n\n\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\tconst zValue = curves.z.values[ zIndex ];\n\t\t\t\tvalues.push( zValue );\n\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn values;\n\n\t}\n\n\t// Rotations are defined as Euler angles which can have values  of any size\n\t// These will be converted to quaternions which don't support values greater than\n\t// PI, so we'll interpolate large rotations\n\tinterpolateRotations( curvex, curvey, curvez, eulerOrder ) {\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\t// Add first frame\n\t\ttimes.push( curvex.times[ 0 ] );\n\t\tvalues.push( MathUtils.degToRad( curvex.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvey.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvez.values[ 0 ] ) );\n\n\t\tfor ( let i = 1; i < curvex.values.length; i ++ ) {\n\n\t\t\tconst initialValue = [\n\t\t\t\tcurvex.values[ i - 1 ],\n\t\t\t\tcurvey.values[ i - 1 ],\n\t\t\t\tcurvez.values[ i - 1 ],\n\t\t\t];\n\n\t\t\tif ( isNaN( initialValue[ 0 ] ) || isNaN( initialValue[ 1 ] ) || isNaN( initialValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst initialValueRad = initialValue.map( MathUtils.degToRad );\n\n\t\t\tconst currentValue = [\n\t\t\t\tcurvex.values[ i ],\n\t\t\t\tcurvey.values[ i ],\n\t\t\t\tcurvez.values[ i ],\n\t\t\t];\n\n\t\t\tif ( isNaN( currentValue[ 0 ] ) || isNaN( currentValue[ 1 ] ) || isNaN( currentValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValueRad = currentValue.map( MathUtils.degToRad );\n\n\t\t\tconst valuesSpan = [\n\t\t\t\tcurrentValue[ 0 ] - initialValue[ 0 ],\n\t\t\t\tcurrentValue[ 1 ] - initialValue[ 1 ],\n\t\t\t\tcurrentValue[ 2 ] - initialValue[ 2 ],\n\t\t\t];\n\n\t\t\tconst absoluteSpan = [\n\t\t\t\tMath.abs( valuesSpan[ 0 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 1 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 2 ] ),\n\t\t\t];\n\n\t\t\tif ( absoluteSpan[ 0 ] >= 180 || absoluteSpan[ 1 ] >= 180 || absoluteSpan[ 2 ] >= 180 ) {\n\n\t\t\t\tconst maxAbsSpan = Math.max( ...absoluteSpan );\n\n\t\t\t\tconst numSubIntervals = maxAbsSpan / 180;\n\n\t\t\t\tconst E1 = new Euler( ...initialValueRad, eulerOrder );\n\t\t\t\tconst E2 = new Euler( ...currentValueRad, eulerOrder );\n\n\t\t\t\tconst Q1 = new Quaternion().setFromEuler( E1 );\n\t\t\t\tconst Q2 = new Quaternion().setFromEuler( E2 );\n\n\t\t\t\t// Check unroll\n\t\t\t\tif ( Q1.dot( Q2 ) ) {\n\n\t\t\t\t\tQ2.set( - Q2.x, - Q2.y, - Q2.z, - Q2.w );\n\n\t\t\t\t}\n\n\t\t\t\t// Interpolate\n\t\t\t\tconst initialTime = curvex.times[ i - 1 ];\n\t\t\t\tconst timeSpan = curvex.times[ i ] - initialTime;\n\n\t\t\t\tconst Q = new Quaternion();\n\t\t\t\tconst E = new Euler();\n\t\t\t\tfor ( let t = 0; t < 1; t += 1 / numSubIntervals ) {\n\n\t\t\t\t\tQ.copy( Q1.clone().slerp( Q2.clone(), t ) );\n\n\t\t\t\t\ttimes.push( initialTime + t * timeSpan );\n\t\t\t\t\tE.setFromQuaternion( Q, eulerOrder );\n\n\t\t\t\t\tvalues.push( E.x );\n\t\t\t\t\tvalues.push( E.y );\n\t\t\t\t\tvalues.push( E.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttimes.push( curvex.times[ i ] );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvex.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvey.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvez.values[ i ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn [ times, values ];\n\n\t}\n\n}\n\n// parse an FBX file in ASCII format\nclass TextParser {\n\n\tgetPrevNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t}\n\n\tgetCurrentNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t}\n\n\tgetCurrentProp() {\n\n\t\treturn this.currentProp;\n\n\t}\n\n\tpushStack( node ) {\n\n\t\tthis.nodeStack.push( node );\n\t\tthis.currentIndent += 1;\n\n\t}\n\n\tpopStack() {\n\n\t\tthis.nodeStack.pop();\n\t\tthis.currentIndent -= 1;\n\n\t}\n\n\tsetCurrentProp( val, name ) {\n\n\t\tthis.currentProp = val;\n\t\tthis.currentPropName = name;\n\n\t}\n\n\tparse( text ) {\n\n\t\tthis.currentIndent = 0;\n\n\t\tthis.allNodes = new FBXTree();\n\t\tthis.nodeStack = [];\n\t\tthis.currentProp = [];\n\t\tthis.currentPropName = '';\n\n\t\tconst scope = this;\n\n\t\tconst split = text.split( /[\\r\\n]+/ );\n\n\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\tconst matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\tconst matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\tconst matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\tconst matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\tconst matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\tif ( matchBeginning ) {\n\n\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\tscope.popStack();\n\n\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.allNodes;\n\n\t}\n\n\tparseNodeBegin( line, property ) {\n\n\t\tconst nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\tconst nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t} );\n\n\t\tconst node = { name: nodeName };\n\t\tconst attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\t// a top node\n\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t} else { // a subnode\n\n\t\t\t// if the subnode already exists, append it\n\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\tthis.pushStack( node );\n\n\t}\n\n\tparseNodeAttr( attrs ) {\n\n\t\tlet id = attrs[ 0 ];\n\n\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet name = '', type = '';\n\n\t\tif ( attrs.length > 1 ) {\n\n\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\ttype = attrs[ 2 ];\n\n\t\t}\n\n\t\treturn { id: id, name: name, type: type };\n\n\t}\n\n\tparseNodeProperty( line, property, contentLine ) {\n\n\t\tlet propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\tlet propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t//\tContent: ,\n\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t}\n\n\t\tconst currentNode = this.getCurrentNode();\n\t\tconst parentName = currentNode.name;\n\n\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Connections\n\t\tif ( propName === 'C' ) {\n\n\t\t\tconst connProps = propValue.split( ',' ).slice( 1 );\n\t\t\tconst from = parseInt( connProps[ 0 ] );\n\t\t\tconst to = parseInt( connProps[ 1 ] );\n\n\t\t\tlet rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t} );\n\n\t\t\tpropName = 'connections';\n\t\t\tpropValue = [ from, to ];\n\t\t\tappend( propValue, rest );\n\n\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Node\n\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t// connections\n\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t} else {\n\n\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\telse currentNode.a = propValue;\n\n\t\t}\n\n\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t}\n\n\t}\n\n\tparseNodePropertyContinued( line ) {\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\tcurrentNode.a += line;\n\n\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t// so convert the string to an array\n\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t}\n\n\t}\n\n\t// parse \"Property70\"\n\tparseNodeSpecialProperty( line, propName, propValue ) {\n\n\t\t// split this\n\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t// into array like below\n\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\tconst props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t} );\n\n\t\tconst innerPropName = props[ 0 ];\n\t\tconst innerPropType1 = props[ 1 ];\n\t\tconst innerPropType2 = props[ 2 ];\n\t\tconst innerPropFlag = props[ 3 ];\n\t\tlet innerPropValue = props[ 4 ];\n\n\t\t// cast values where needed, otherwise leave as strings\n\t\tswitch ( innerPropType1 ) {\n\n\t\t\tcase 'int':\n\t\t\tcase 'enum':\n\t\t\tcase 'bool':\n\t\t\tcase 'ULongLong':\n\t\t\tcase 'double':\n\t\t\tcase 'Number':\n\t\t\tcase 'FieldOfView':\n\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t\tcase 'Color':\n\t\t\tcase 'ColorRGB':\n\t\t\tcase 'Vector3D':\n\t\t\tcase 'Lcl_Translation':\n\t\t\tcase 'Lcl_Rotation':\n\t\t\tcase 'Lcl_Scaling':\n\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// CAUTION: these props must append to parent's parent\n\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t'type': innerPropType1,\n\t\t\t'type2': innerPropType2,\n\t\t\t'flag': innerPropFlag,\n\t\t\t'value': innerPropValue\n\n\t\t};\n\n\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t}\n\n}\n\n// Parse an FBX file in Binary format\nclass BinaryParser {\n\n\tparse( buffer ) {\n\n\t\tconst reader = new BinaryReader( buffer );\n\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\tconst version = reader.getUint32();\n\n\t\tif ( version < 6400 ) {\n\n\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t}\n\n\t\tconst allNodes = new FBXTree();\n\n\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\tconst node = this.parseNode( reader, version );\n\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t}\n\n\t\treturn allNodes;\n\n\t}\n\n\t// Check if reader has reached the end of content.\n\tendOfContent( reader ) {\n\n\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t// - 16bytes: magic\n\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t// - 4bytes: magic\n\t\t// - 4bytes: version\n\t\t// - 120bytes: zero\n\t\t// - 16bytes: magic\n\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t} else {\n\n\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t}\n\n\t}\n\n\t// recursively parse nodes until the end of the file is reached\n\tparseNode( reader, version ) {\n\n\t\tconst node = {};\n\n\t\t// The first three data sizes depends on version.\n\t\tconst endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\tconst numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\tconst nameLen = reader.getUint8();\n\t\tconst name = reader.getString( nameLen );\n\n\t\t// Regards this node as NULL-record if endOffset is zero\n\t\tif ( endOffset === 0 ) return null;\n\n\t\tconst propertyList = [];\n\n\t\tfor ( let i = 0; i < numProperties; i ++ ) {\n\n\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t}\n\n\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\tconst id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\tconst attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\tconst attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t// check if this node represents just a single property\n\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\tconst subNode = this.parseNode( reader, version );\n\n\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t}\n\n\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\tif ( typeof id === 'number' ) node.id = id;\n\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\tif ( name !== '' ) node.name = name;\n\n\t\treturn node;\n\n\t}\n\n\tparseSubNode( name, node, subNode ) {\n\n\t\t// special case: child node is single property\n\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\tconst value = subNode.propertyList[ 0 ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\tsubNode.a = value;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t}\n\n\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\tconst array = [];\n\n\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t} );\n\n\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\tnode.connections = [];\n\n\t\t\t}\n\n\t\t\tnode.connections.push( array );\n\n\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\tconst keys = Object.keys( subNode );\n\n\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t} );\n\n\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\tlet innerPropName = subNode.propertyList[ 0 ];\n\t\t\tlet innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\tconst innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\tconst innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\tlet innerPropValue;\n\n\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\tinnerPropValue = [\n\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t}\n\n\t\t\t// this will be copied to parent, see above\n\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t}\n\n\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tparseProperty( reader ) {\n\n\t\tconst type = reader.getString( 1 );\n\t\tlet length;\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 'C':\n\t\t\t\treturn reader.getBoolean();\n\n\t\t\tcase 'D':\n\t\t\t\treturn reader.getFloat64();\n\n\t\t\tcase 'F':\n\t\t\t\treturn reader.getFloat32();\n\n\t\t\tcase 'I':\n\t\t\t\treturn reader.getInt32();\n\n\t\t\tcase 'L':\n\t\t\t\treturn reader.getInt64();\n\n\t\t\tcase 'R':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\tcase 'S':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getString( length );\n\n\t\t\tcase 'Y':\n\t\t\t\treturn reader.getInt16();\n\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'f':\n\t\t\tcase 'i':\n\t\t\tcase 'l':\n\n\t\t\t\tconst arrayLength = reader.getUint32();\n\t\t\t\tconst encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\tconst compressedLength = reader.getUint32();\n\n\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst data = fflate.unzlibSync( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) );\n\t\t\t\tconst reader2 = new BinaryReader( data.buffer );\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\tcase 'i':\n\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t}\n\n\t\t\t\tbreak; // cannot happen but is required by the DeepScan\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t}\n\n\t}\n\n}\n\nclass BinaryReader {\n\n\tconstructor( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\t\tthis._textDecoder = new TextDecoder();\n\n\t}\n\n\tgetOffset() {\n\n\t\treturn this.offset;\n\n\t}\n\n\tsize() {\n\n\t\treturn this.dv.buffer.byteLength;\n\n\t}\n\n\tskip( length ) {\n\n\t\tthis.offset += length;\n\n\t}\n\n\t// seems like true/false representation depends on exporter.\n\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t// then sees LSB.\n\tgetBoolean() {\n\n\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t}\n\n\tgetBooleanArray( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getBoolean() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint8() {\n\n\t\tconst value = this.dv.getUint8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t}\n\n\tgetInt16() {\n\n\t\tconst value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t}\n\n\tgetInt32() {\n\n\t\tconst value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetInt32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint32() {\n\n\t\tconst value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t// There's a possibility that this method returns wrong value if the value\n\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t// TODO: safely handle 64-bit integer\n\tgetInt64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\t// calculate negative value\n\t\tif ( high & 0x80000000 ) {\n\n\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetInt64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// Note: see getInt64() comment\n\tgetUint64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetFloat32() {\n\n\t\tconst value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetFloat32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetFloat64() {\n\n\t\tconst value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\tthis.offset += 8;\n\t\treturn value;\n\n\t}\n\n\tgetFloat64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetArrayBuffer( size ) {\n\n\t\tconst value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\tthis.offset += size;\n\t\treturn value;\n\n\t}\n\n\tgetString( size ) {\n\n\t\tconst start = this.offset;\n\t\tlet a = new Uint8Array( this.dv.buffer, start, size );\n\n\t\tthis.skip( size );\n\n\t\tconst nullByte = a.indexOf( 0 );\n\t\tif ( nullByte >= 0 ) a = new Uint8Array( this.dv.buffer, start, nullByte );\n\n\t\treturn this._textDecoder.decode( a );\n\n\t}\n\n}\n\n// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n// and BinaryParser( FBX Binary format)\nclass FBXTree {\n\n\tadd( key, val ) {\n\n\t\tthis[ key ] = val;\n\n\t}\n\n}\n\n// ************** UTILITY FUNCTIONS **************\n\nfunction isFbxFormatBinary( buffer ) {\n\n\tconst CORRECT = 'Kaydara\\u0020FBX\\u0020Binary\\u0020\\u0020\\0';\n\n\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n}\n\nfunction isFbxFormatASCII( text ) {\n\n\tconst CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\tlet cursor = 0;\n\n\tfunction read( offset ) {\n\n\t\tconst result = text[ offset - 1 ];\n\t\ttext = text.slice( cursor + offset );\n\t\tcursor ++;\n\t\treturn result;\n\n\t}\n\n\tfor ( let i = 0; i < CORRECT.length; ++ i ) {\n\n\t\tconst num = read( 1 );\n\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction getFbxVersion( text ) {\n\n\tconst versionRegExp = /FBXVersion: (\\d+)/;\n\tconst match = text.match( versionRegExp );\n\n\tif ( match ) {\n\n\t\tconst version = parseInt( match[ 1 ] );\n\t\treturn version;\n\n\t}\n\n\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n}\n\n// Converts FBX ticks into real time seconds.\nfunction convertFBXTimeToSeconds( time ) {\n\n\treturn time / 46186158000;\n\n}\n\nconst dataArray = [];\n\n// extracts the data from the correct position in the FBX array based on indexing type\nfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\tlet index;\n\n\tswitch ( infoObject.mappingType ) {\n\n\t\tcase 'ByPolygonVertex' :\n\t\t\tindex = polygonVertexIndex;\n\t\t\tbreak;\n\t\tcase 'ByPolygon' :\n\t\t\tindex = polygonIndex;\n\t\t\tbreak;\n\t\tcase 'ByVertice' :\n\t\t\tindex = vertexIndex;\n\t\t\tbreak;\n\t\tcase 'AllSame' :\n\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t}\n\n\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\tconst from = index * infoObject.dataSize;\n\tconst to = from + infoObject.dataSize;\n\n\treturn slice( dataArray, infoObject.buffer, from, to );\n\n}\n\nconst tempEuler = new Euler();\nconst tempVec = new Vector3();\n\n// generate transformation from FBX transform data\n// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\nfunction generateTransform( transformData ) {\n\n\tconst lTranslationM = new Matrix4();\n\tconst lPreRotationM = new Matrix4();\n\tconst lRotationM = new Matrix4();\n\tconst lPostRotationM = new Matrix4();\n\n\tconst lScalingM = new Matrix4();\n\tconst lScalingPivotM = new Matrix4();\n\tconst lScalingOffsetM = new Matrix4();\n\tconst lRotationOffsetM = new Matrix4();\n\tconst lRotationPivotM = new Matrix4();\n\n\tconst lParentGX = new Matrix4();\n\tconst lParentLX = new Matrix4();\n\tconst lGlobalT = new Matrix4();\n\n\tconst inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\tif ( transformData.preRotation ) {\n\n\t\tconst array = transformData.preRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.rotation ) {\n\n\t\tconst array = transformData.rotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.postRotation ) {\n\n\t\tconst array = transformData.postRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\t\tlPostRotationM.invert();\n\n\t}\n\n\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t// Pivots and offsets\n\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t// parent transform\n\tif ( transformData.parentMatrixWorld ) {\n\n\t\tlParentLX.copy( transformData.parentMatrix );\n\t\tlParentGX.copy( transformData.parentMatrixWorld );\n\n\t}\n\n\tconst lLRM = lPreRotationM.clone().multiply( lRotationM ).multiply( lPostRotationM );\n\t// Global Rotation\n\tconst lParentGRM = new Matrix4();\n\tlParentGRM.extractRotation( lParentGX );\n\n\t// Global Shear*Scaling\n\tconst lParentTM = new Matrix4();\n\tlParentTM.copyPosition( lParentGX );\n\n\tconst lParentGRSM = lParentTM.clone().invert().multiply( lParentGX );\n\tconst lParentGSM = lParentGRM.clone().invert().multiply( lParentGRSM );\n\tconst lLSM = lScalingM;\n\n\tconst lGlobalRS = new Matrix4();\n\n\tif ( inheritType === 0 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t} else if ( inheritType === 1 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t} else {\n\n\t\tconst lParentLSM = new Matrix4().scale( new Vector3().setFromMatrixScale( lParentLX ) );\n\t\tconst lParentLSM_inv = lParentLSM.clone().invert();\n\t\tconst lParentGSM_noLocal = lParentGSM.clone().multiply( lParentLSM_inv );\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t}\n\n\tconst lRotationPivotM_inv = lRotationPivotM.clone().invert();\n\tconst lScalingPivotM_inv = lScalingPivotM.clone().invert();\n\t// Calculate the local transform matrix\n\tlet lTransform = lTranslationM.clone().multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\tconst lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\tconst lGlobalTranslation = lParentGX.clone().multiply( lLocalTWithAllPivotAndOffsetInfo );\n\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\tlTransform = lGlobalT.clone().multiply( lGlobalRS );\n\n\t// from global to local\n\tlTransform.premultiply( lParentGX.invert() );\n\n\treturn lTransform;\n\n}\n\n// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\nfunction getEulerOrder( order ) {\n\n\torder = order || 0;\n\n\tconst enums = [\n\t\t'ZYX', // -> XYZ extrinsic\n\t\t'YZX', // -> XZY extrinsic\n\t\t'XZY', // -> YZX extrinsic\n\t\t'ZXY', // -> YXZ extrinsic\n\t\t'YXZ', // -> ZXY extrinsic\n\t\t'XYZ', // -> ZYX extrinsic\n\t\t//'SphericXYZ', // not possible to support\n\t];\n\n\tif ( order === 6 ) {\n\n\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\treturn enums[ 0 ];\n\n\t}\n\n\treturn enums[ order ];\n\n}\n\n// Parses comma separated list of numbers and returns them an array.\n// Used internally by the TextParser\nfunction parseNumberArray( value ) {\n\n\tconst array = value.split( ',' ).map( function ( val ) {\n\n\t\treturn parseFloat( val );\n\n\t} );\n\n\treturn array;\n\n}\n\nfunction convertArrayBufferToString( buffer, from, to ) {\n\n\tif ( from === undefined ) from = 0;\n\tif ( to === undefined ) to = buffer.byteLength;\n\n\treturn new TextDecoder().decode( new Uint8Array( buffer, from, to ) );\n\n}\n\nfunction append( a, b ) {\n\n\tfor ( let i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n}\n\nfunction slice( a, b, from, to ) {\n\n\tfor ( let i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n\treturn a;\n\n}\n\n\nexport { FBXLoader };\n","import * as THREE from 'three';\r\n\r\nexport class Enemy {\r\n    constructor(scene, data) {\r\n        this.scene = scene;\r\n        this.data = data;\r\n        this.type = data.type;\r\n        this.speed = data.speed;\r\n        \r\n        // Create enemy mesh (red cube)\r\n        const geometry = new THREE.BoxGeometry(1, 2, 1);\r\n        const material = new THREE.MeshStandardMaterial({ color: 0xff0000 });\r\n        this.mesh = new THREE.Mesh(geometry, material);\r\n        \r\n        // Set initial position\r\n        this.mesh.position.set(\r\n            data.position.x,\r\n            data.position.y,\r\n            data.position.z\r\n        );\r\n        \r\n        // Add to scene\r\n        scene.add(this.mesh);\r\n        \r\n        // Patrol-specific properties\r\n        if (this.type === 'patrol') {\r\n            this.patrolPoints = data.patrolPoints;\r\n            this.currentPoint = 0;\r\n            this.direction = 1; // 1 for forward, -1 for backward\r\n        }\r\n        \r\n        // Chase-specific properties\r\n        if (this.type === 'chase') {\r\n            this.detectionRange = data.detectionRange;\r\n            this.isChasing = false;\r\n        }\r\n    }\r\n    \r\n    update(playerPosition) {\r\n        if (this.type === 'patrol') {\r\n            this.updatePatrol();\r\n        } else if (this.type === 'chase') {\r\n            this.updateChase(playerPosition);\r\n        }\r\n    }\r\n    \r\n    updatePatrol() {\r\n        const targetPoint = this.patrolPoints[this.currentPoint];\r\n        const position = this.mesh.position;\r\n        \r\n        // Calculate direction to target\r\n        const direction = new THREE.Vector3(\r\n            targetPoint.x - position.x,\r\n            0,\r\n            targetPoint.z - position.z\r\n        );\r\n        \r\n        // Check if we're close to the target point\r\n        if (direction.length() < 0.1) {\r\n            // Switch direction at endpoints\r\n            if (this.currentPoint === 0 || this.currentPoint === this.patrolPoints.length - 1) {\r\n                this.direction *= -1;\r\n            }\r\n            this.currentPoint = Math.max(0, Math.min(\r\n                this.currentPoint + this.direction,\r\n                this.patrolPoints.length - 1\r\n            ));\r\n            return;\r\n        }\r\n        \r\n        // Move towards target point\r\n        direction.normalize();\r\n        position.add(direction.multiplyScalar(this.speed));\r\n        \r\n        // Rotate enemy to face movement direction\r\n        this.mesh.lookAt(targetPoint.x, position.y, targetPoint.z);\r\n    }\r\n    \r\n    updateChase(playerPosition) {\r\n        const position = this.mesh.position;\r\n        const distanceToPlayer = position.distanceTo(playerPosition);\r\n        \r\n        // Check if player is within detection range\r\n        if (distanceToPlayer < this.detectionRange) {\r\n            this.isChasing = true;\r\n        } else if (distanceToPlayer > this.detectionRange * 1.5) {\r\n            // Stop chasing if player gets too far\r\n            this.isChasing = false;\r\n        }\r\n        \r\n        if (this.isChasing) {\r\n            // Calculate direction to player\r\n            const direction = new THREE.Vector3(\r\n                playerPosition.x - position.x,\r\n                0,\r\n                playerPosition.z - position.z\r\n            );\r\n            \r\n            // Move towards player\r\n            direction.normalize();\r\n            position.add(direction.multiplyScalar(this.speed));\r\n            \r\n            // Rotate enemy to face player\r\n            this.mesh.lookAt(playerPosition.x, position.y, playerPosition.z);\r\n        }\r\n    }\r\n    \r\n    checkCollision(playerPosition) {\r\n        const collisionDistance = 1.5;\r\n        return this.mesh.position.distanceTo(playerPosition) < collisionDistance;\r\n    }\r\n} ","import * as THREE from 'three';\nimport { Player } from './player.js';\nimport { Level } from './level.js';\nimport { UI } from './ui.js';\n\n// Scene setup\nconst scene = new THREE.Scene();\nscene.background = new THREE.Color(0x87CEEB); // Sky blue background\n\n// Camera setup - positioned higher and further back for 3rd person view\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\ncamera.position.set(0, 5, 12); // Position camera higher and further back for larger model\ncamera.lookAt(0, 0, 0);\n\n// Renderer setup\nconst canvas = document.getElementById('game-canvas');\nif (!canvas) {\n    document.body.innerHTML = '<div style=\"color: white; text-align: center; margin-top: 2em;\">Unable to initialize game. Please refresh the page.</div>';\n    throw new Error('Canvas element not found');\n}\nconst renderer = new THREE.WebGLRenderer({ \n    canvas: canvas,\n    antialias: true \n});\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n// Lighting setup\nconst ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\nscene.add(ambientLight);\n\nconst directionalLight = new THREE.DirectionalLight(0xffffff, 1);\ndirectionalLight.position.set(5, 5, 5);\ndirectionalLight.castShadow = true;\ndirectionalLight.shadow.mapSize.width = 2048;\ndirectionalLight.shadow.mapSize.height = 2048;\nscene.add(directionalLight);\n\n// Create UI\nconst ui = new UI();\n\n// Create level manager with UI\nconst level = new Level(scene, ui);\n\n// Create player\nconst player = new Player(scene);\n\n// Game state\nlet gameOver = false;\nlet clock = new THREE.Clock();\n\n// Input state\nconst keys = {\n    w: false,\n    a: false,\n    s: false,\n    d: false\n};\n\n// Handle keyboard input\nwindow.addEventListener('keydown', (event) => {\n    switch(event.key.toLowerCase()) {\n        case 'w': keys.w = true; break;\n        case 'a': keys.a = true; break;\n        case 's': keys.s = true; break;\n        case 'd': keys.d = true; break;\n    }\n});\n\nwindow.addEventListener('keyup', (event) => {\n    switch(event.key.toLowerCase()) {\n        case 'w': keys.w = false; break;\n        case 'a': keys.a = false; break;\n        case 's': keys.s = false; break;\n        case 'd': keys.d = false; break;\n    }\n});\n\n// Handle window resize\nwindow.addEventListener('resize', () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n});\n\n// Reset game\nfunction resetGame() {\n    gameOver = false;\n    level.reset();\n    init();\n}\n\n// Load initial level\nasync function init() {\n    try {\n        const playerStart = await level.loadLevel(1);\n        if (player.mesh) {\n            player.reset(new THREE.Vector3(playerStart.x, playerStart.y, playerStart.z));\n        }\n        ui.hideMessage();\n    } catch (error) {\n        ui.showError('Unable to load level. Please refresh the page.');\n    }\n}\n\n// Animation loop\nfunction animate() {\n    requestAnimationFrame(animate);\n    \n    if (!gameOver) {\n        const delta = clock.getDelta();\n        \n        // Update player\n        player.update(delta, keys);\n        \n        // Update level (includes enemies and collisions)\n        const playerPos = player.getPosition();\n        if (level.update(playerPos)) {\n            gameOver = true;\n            setTimeout(resetGame, 1500);\n        }\n        \n        // Update camera to follow player smoothly\n        const idealOffset = new THREE.Vector3(0, 5, 12);\n        const idealLookat = new THREE.Vector3(0, 0, 0);\n        \n        // Transform ideal camera position based on player rotation\n        const playerRotation = player.mesh ? player.mesh.rotation.y : 0;\n        idealOffset.applyAxisAngle(new THREE.Vector3(0, 1, 0), playerRotation);\n        idealLookat.applyAxisAngle(new THREE.Vector3(0, 1, 0), playerRotation);\n        \n        // Add player position to get world space coordinates\n        idealOffset.add(playerPos);\n        idealLookat.add(playerPos);\n        \n        // Smooth camera movement\n        camera.position.lerp(idealOffset, 0.1);\n        const currentLookat = new THREE.Vector3();\n        currentLookat.copy(playerPos).add(new THREE.Vector3(0, 1, 0));\n        camera.lookAt(currentLookat);\n    }\n    \n    renderer.render(scene, camera);\n}\n\n// Error handling for runtime errors\nwindow.addEventListener('error', (event) => {\n    ui.showError();\n    event.preventDefault();\n});\n\n// Start the game\ninit().then(() => {\n    animate();\n}).catch(() => {\n    ui.showError();\n});\n","export class UI {\r\n    constructor() {\r\n        this.createUIElements();\r\n        this.ringCount = 0;\r\n        this.totalRings = 0;\r\n        this.timeRemaining = 60; // 60 seconds default\r\n        this.timerInterval = null;\r\n    }\r\n\r\n    createUIElements() {\r\n        // Create UI container\r\n        this.container = document.createElement('div');\r\n        this.container.style.position = 'fixed';\r\n        this.container.style.top = '20px';\r\n        this.container.style.left = '20px';\r\n        this.container.style.color = 'white';\r\n        this.container.style.fontFamily = 'Arial, sans-serif';\r\n        this.container.style.fontSize = '24px';\r\n        this.container.style.textShadow = '2px 2px 4px rgba(0,0,0,0.5)';\r\n        document.body.appendChild(this.container);\r\n\r\n        // Create ring counter\r\n        this.ringCounter = document.createElement('div');\r\n        this.ringCounter.textContent = 'Rings: 0/0';\r\n        this.container.appendChild(this.ringCounter);\r\n\r\n        // Create timer\r\n        this.timer = document.createElement('div');\r\n        this.timer.textContent = 'Time: 60s';\r\n        this.container.appendChild(this.timer);\r\n\r\n        // Create message display (for game over, win, etc.)\r\n        this.messageDisplay = document.createElement('div');\r\n        this.messageDisplay.style.position = 'fixed';\r\n        this.messageDisplay.style.top = '50%';\r\n        this.messageDisplay.style.left = '50%';\r\n        this.messageDisplay.style.transform = 'translate(-50%, -50%)';\r\n        this.messageDisplay.style.color = 'white';\r\n        this.messageDisplay.style.fontFamily = 'Arial, sans-serif';\r\n        this.messageDisplay.style.fontSize = '48px';\r\n        this.messageDisplay.style.textShadow = '2px 2px 4px rgba(0,0,0,0.5)';\r\n        this.messageDisplay.style.display = 'none';\r\n        document.body.appendChild(this.messageDisplay);\r\n    }\r\n\r\n    setTotalRings(total) {\r\n        this.totalRings = total;\r\n        this.updateRingCounter();\r\n    }\r\n\r\n    updateRingCounter() {\r\n        this.ringCounter.textContent = `Rings: ${this.ringCount}/${this.totalRings}`;\r\n    }\r\n\r\n    incrementRings() {\r\n        this.ringCount++;\r\n        this.updateRingCounter();\r\n        \r\n        // Check for win condition\r\n        if (this.ringCount === this.totalRings) {\r\n            this.showMessage('Level Complete!', 'green');\r\n            this.stopTimer();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    startTimer(seconds = 60) {\r\n        this.timeRemaining = seconds;\r\n        this.updateTimer();\r\n        \r\n        if (this.timerInterval) {\r\n            clearInterval(this.timerInterval);\r\n        }\r\n        \r\n        this.timerInterval = setInterval(() => {\r\n            this.timeRemaining--;\r\n            this.updateTimer();\r\n            \r\n            if (this.timeRemaining <= 0) {\r\n                this.stopTimer();\r\n                this.showMessage('Time\\'s Up!', 'red');\r\n                return true;\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    updateTimer() {\r\n        this.timer.textContent = `Time: ${this.timeRemaining}s`;\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerInterval) {\r\n            clearInterval(this.timerInterval);\r\n            this.timerInterval = null;\r\n        }\r\n    }\r\n\r\n    showMessage(text, color = 'white') {\r\n        this.messageDisplay.textContent = text;\r\n        this.messageDisplay.style.color = color;\r\n        this.messageDisplay.style.display = 'block';\r\n    }\r\n\r\n    hideMessage() {\r\n        this.messageDisplay.style.display = 'none';\r\n    }\r\n\r\n    reset() {\r\n        this.ringCount = 0;\r\n        this.updateRingCounter();\r\n        this.hideMessage();\r\n        this.stopTimer();\r\n    }\r\n\r\n    showError(message = 'Something went wrong. Please refresh the page.') {\r\n        this.showMessage(message, '#ff4444');\r\n    }\r\n} ","import * as THREE from 'three';\r\nimport { Enemy } from './enemy.js';\r\n\r\nexport class Level {\r\n    constructor(scene, ui) {\r\n        this.scene = scene;\r\n        this.ui = ui;\r\n        this.rings = [];\r\n        this.enemies = [];\r\n        this.obstacles = [];\r\n        this.platforms = [];\r\n        this.levelData = null;\r\n    }\r\n\r\n    async loadLevel(levelNumber) {\r\n        try {\r\n            const response = await fetch(`/data/level${levelNumber}.json`);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            this.levelData = await response.json();\r\n            \r\n            // Set up environment\r\n            this.setupEnvironment();\r\n            \r\n            // Create terrain\r\n            this.createTerrain();\r\n            \r\n            // Create rings\r\n            this.createRings();\r\n            \r\n            // Create enemies\r\n            this.createEnemies();\r\n            \r\n            // Set up UI\r\n            this.ui.setTotalRings(this.levelData.rings.length);\r\n            this.ui.reset();\r\n            this.ui.startTimer(60);\r\n            \r\n            return this.levelData.playerStart;\r\n        } catch (error) {\r\n            this.ui.showError('Unable to load level. Please refresh the page.');\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setupEnvironment() {\r\n        // Update scene background\r\n        this.scene.background = new THREE.Color(this.levelData.environment.skyColor);\r\n\r\n        // Create or update ground\r\n        if (this.ground) {\r\n            this.scene.remove(this.ground);\r\n        }\r\n\r\n        const groundGeometry = new THREE.PlaneGeometry(\r\n            this.levelData.environment.groundSize.width,\r\n            this.levelData.environment.groundSize.depth\r\n        );\r\n        const groundMaterial = new THREE.MeshStandardMaterial({\r\n            color: new THREE.Color(this.levelData.environment.groundColor),\r\n            roughness: 0.8\r\n        });\r\n        this.ground = new THREE.Mesh(groundGeometry, groundMaterial);\r\n        this.ground.rotation.x = -Math.PI / 2;\r\n        this.scene.add(this.ground);\r\n    }\r\n\r\n    createTerrain() {\r\n        // Clear existing terrain\r\n        this.obstacles.forEach(obstacle => this.scene.remove(obstacle));\r\n        this.platforms.forEach(platform => this.scene.remove(platform));\r\n        this.obstacles = [];\r\n        this.platforms = [];\r\n\r\n        if (this.levelData.terrain) {\r\n            // Create platforms\r\n            if (this.levelData.terrain.platforms) {\r\n                this.levelData.terrain.platforms.forEach(platformData => {\r\n                    let geometry;\r\n                    if (platformData.type === 'platform') {\r\n                        geometry = new THREE.BoxGeometry(\r\n                            platformData.size.width,\r\n                            platformData.size.height,\r\n                            platformData.size.depth\r\n                        );\r\n                    } else if (platformData.type === 'ramp') {\r\n                        // For ramps, we'll use a box and rotate it\r\n                        geometry = new THREE.BoxGeometry(\r\n                            platformData.size.width,\r\n                            platformData.size.height,\r\n                            platformData.size.depth\r\n                        );\r\n                    }\r\n\r\n                    const material = new THREE.MeshStandardMaterial({\r\n                        color: new THREE.Color(platformData.color),\r\n                        roughness: 0.7\r\n                    });\r\n\r\n                    const platform = new THREE.Mesh(geometry, material);\r\n                    platform.position.set(\r\n                        platformData.position.x,\r\n                        platformData.position.y,\r\n                        platformData.position.z\r\n                    );\r\n\r\n                    // Convert rotation to radians\r\n                    platform.rotation.set(\r\n                        THREE.MathUtils.degToRad(platformData.rotation.x),\r\n                        THREE.MathUtils.degToRad(platformData.rotation.y),\r\n                        THREE.MathUtils.degToRad(platformData.rotation.z)\r\n                    );\r\n\r\n                    this.scene.add(platform);\r\n                    this.platforms.push(platform);\r\n                });\r\n            }\r\n\r\n            // Create obstacles\r\n            if (this.levelData.terrain.obstacles) {\r\n                this.levelData.terrain.obstacles.forEach(obstacleData => {\r\n                    let geometry;\r\n                    if (obstacleData.type === 'box') {\r\n                        geometry = new THREE.BoxGeometry(\r\n                            obstacleData.size.width,\r\n                            obstacleData.size.height,\r\n                            obstacleData.size.depth\r\n                        );\r\n                    } else if (obstacleData.type === 'cylinder') {\r\n                        geometry = new THREE.CylinderGeometry(\r\n                            obstacleData.size.radius,\r\n                            obstacleData.size.radius,\r\n                            obstacleData.size.height,\r\n                            32\r\n                        );\r\n                    }\r\n\r\n                    const material = new THREE.MeshStandardMaterial({\r\n                        color: new THREE.Color(obstacleData.color),\r\n                        roughness: 0.5\r\n                    });\r\n\r\n                    const obstacle = new THREE.Mesh(geometry, material);\r\n                    obstacle.position.set(\r\n                        obstacleData.position.x,\r\n                        obstacleData.position.y,\r\n                        obstacleData.position.z\r\n                    );\r\n\r\n                    // Convert rotation to radians\r\n                    obstacle.rotation.set(\r\n                        THREE.MathUtils.degToRad(obstacleData.rotation.x),\r\n                        THREE.MathUtils.degToRad(obstacleData.rotation.y),\r\n                        THREE.MathUtils.degToRad(obstacleData.rotation.z)\r\n                    );\r\n\r\n                    this.scene.add(obstacle);\r\n                    this.obstacles.push(obstacle);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    createRings() {\r\n        // Remove existing rings\r\n        this.rings.forEach(ring => this.scene.remove(ring));\r\n        this.rings = [];\r\n\r\n        // Create ring geometry and material\r\n        const ringGeometry = new THREE.TorusGeometry(1, 0.1, 16, 32);\r\n        const ringMaterial = new THREE.MeshStandardMaterial({\r\n            color: 0xffd700, // Gold color\r\n            metalness: 0.7,\r\n            roughness: 0.3\r\n        });\r\n\r\n        // Create rings from level data\r\n        this.levelData.rings.forEach(ringData => {\r\n            const ring = new THREE.Mesh(ringGeometry, ringMaterial);\r\n            \r\n            // Set position\r\n            ring.position.set(\r\n                ringData.position.x,\r\n                ringData.position.y,\r\n                ringData.position.z\r\n            );\r\n            \r\n            // Set rotation (convert to radians)\r\n            ring.rotation.set(\r\n                THREE.MathUtils.degToRad(ringData.rotation.x),\r\n                THREE.MathUtils.degToRad(ringData.rotation.y),\r\n                THREE.MathUtils.degToRad(ringData.rotation.z)\r\n            );\r\n\r\n            // Add to scene and store reference\r\n            this.scene.add(ring);\r\n            this.rings.push(ring);\r\n        });\r\n    }\r\n\r\n    createEnemies() {\r\n        // Remove existing enemies\r\n        this.enemies.forEach(enemy => this.scene.remove(enemy.mesh));\r\n        this.enemies = [];\r\n\r\n        // Create enemies from level data\r\n        if (this.levelData.enemies) {\r\n            this.levelData.enemies.forEach(enemyData => {\r\n                const enemy = new Enemy(this.scene, enemyData);\r\n                this.enemies.push(enemy);\r\n            });\r\n        }\r\n    }\r\n\r\n    update(playerPosition) {\r\n        // Update enemies\r\n        this.enemies.forEach(enemy => {\r\n            enemy.update(playerPosition);\r\n        });\r\n\r\n        // Check ring collisions\r\n        this.checkRingCollisions(playerPosition);\r\n\r\n        // Check enemy collisions\r\n        const enemyCollision = this.checkEnemyCollisions(playerPosition);\r\n        if (enemyCollision) {\r\n            this.ui.showMessage('Game Over!', 'red');\r\n            this.ui.stopTimer();\r\n        }\r\n        return enemyCollision;\r\n    }\r\n\r\n    checkRingCollisions(playerPosition) {\r\n        const collisionDistance = 1.5;\r\n        \r\n        this.rings.forEach((ring, index) => {\r\n            if (!this.levelData.rings[index].collected) {\r\n                const distance = playerPosition.distanceTo(ring.position);\r\n                \r\n                if (distance < collisionDistance) {\r\n                    this.levelData.rings[index].collected = true;\r\n                    ring.visible = false;\r\n                    this.ui.incrementRings();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    checkEnemyCollisions(playerPosition) {\r\n        return this.enemies.some(enemy => enemy.checkCollision(playerPosition));\r\n    }\r\n\r\n    reset() {\r\n        // Reset ring visibility and collected state\r\n        this.rings.forEach((ring, index) => {\r\n            ring.visible = true;\r\n            if (this.levelData.rings[index]) {\r\n                this.levelData.rings[index].collected = false;\r\n            }\r\n        });\r\n\r\n        // Reset UI\r\n        this.ui.reset();\r\n        this.ui.startTimer(60);\r\n    }\r\n} ","import * as THREE from 'three';\r\nimport { FBXLoader } from '@three/examples/loaders/FBXLoader';\r\n\r\nexport class Player {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.mesh = null;\r\n        this.mixer = null;\r\n        this.animations = {};\r\n        this.currentAction = null;\r\n        this.speed = 0.15;\r\n        this.turnSpeed = 0.05;\r\n        this.velocity = new THREE.Vector3();\r\n        this.direction = new THREE.Vector3();\r\n        \r\n        // Load the Stegosaurus model\r\n        this.loadModel();\r\n    }\r\n\r\n    async loadModel() {\r\n        const loader = new FBXLoader();\r\n        try {\r\n            const model = await loader.loadAsync('/memory-bank/Stegasaurus_20K.fbx');\r\n            \r\n            // Scale and position the model appropriately\r\n            model.scale.setScalar(0.01); // Adjust scale as needed\r\n            model.position.y = 0; // Set initial height\r\n            \r\n            // Setup animations if they exist\r\n            if (model.animations.length > 0) {\r\n                this.mixer = new THREE.AnimationMixer(model);\r\n                model.animations.forEach(clip => {\r\n                    this.animations[clip.name] = this.mixer.clipAction(clip);\r\n                });\r\n                // Play default animation if available\r\n                if (this.animations['idle']) {\r\n                    this.playAnimation('idle');\r\n                }\r\n            }\r\n            \r\n            this.mesh = model;\r\n            this.scene.add(model);\r\n            \r\n            // Create a collision box\r\n            const bbox = new THREE.Box3().setFromObject(model);\r\n            const size = bbox.getSize(new THREE.Vector3());\r\n            this.collider = new THREE.Box3();\r\n            this.colliderSize = size;\r\n            \r\n        } catch (error) {\r\n            console.error('Error loading Stegosaurus model:', error);\r\n        }\r\n    }\r\n\r\n    playAnimation(name) {\r\n        if (this.currentAction) {\r\n            this.currentAction.fadeOut(0.2);\r\n        }\r\n        if (this.animations[name]) {\r\n            this.animations[name].reset().fadeIn(0.2).play();\r\n            this.currentAction = this.animations[name];\r\n        }\r\n    }\r\n\r\n    update(delta, keysPressed) {\r\n        if (!this.mesh) return;\r\n\r\n        // Update animation mixer\r\n        if (this.mixer) {\r\n            this.mixer.update(delta);\r\n        }\r\n\r\n        // Reset velocity\r\n        this.velocity.x = 0;\r\n        this.velocity.z = 0;\r\n\r\n        // Calculate movement based on key presses\r\n        if (keysPressed['w']) {\r\n            this.velocity.z = -this.speed;\r\n        }\r\n        if (keysPressed['s']) {\r\n            this.velocity.z = this.speed;\r\n        }\r\n        if (keysPressed['a']) {\r\n            this.mesh.rotation.y += this.turnSpeed;\r\n        }\r\n        if (keysPressed['d']) {\r\n            this.mesh.rotation.y -= this.turnSpeed;\r\n        }\r\n\r\n        // Apply movement in the direction the model is facing\r\n        this.direction.set(0, 0, 1).applyQuaternion(this.mesh.quaternion);\r\n        this.mesh.position.addScaledVector(this.direction, this.velocity.z);\r\n\r\n        // Update collider position\r\n        if (this.collider) {\r\n            this.collider.setFromCenterAndSize(\r\n                this.mesh.position,\r\n                this.colliderSize\r\n            );\r\n        }\r\n\r\n        // Play appropriate animation\r\n        if (this.velocity.length() > 0) {\r\n            this.playAnimation('walk');\r\n        } else {\r\n            this.playAnimation('idle');\r\n        }\r\n    }\r\n\r\n    getPosition() {\r\n        return this.mesh ? this.mesh.position : new THREE.Vector3();\r\n    }\r\n\r\n    reset(startPosition) {\r\n        if (this.mesh) {\r\n            this.mesh.position.copy(startPosition);\r\n            this.mesh.rotation.set(0, 0, 0);\r\n        }\r\n    }\r\n} "],"names":["durl","c","URL","createObjectURL","Blob","type","revokeObjectURL","e","encodeURI","u8","Uint8Array","u16","Uint16Array","u32","Uint32Array","fleb","fdeb","clim","freb","eb","start","b","i","r","j","_a","fl","revfl","fd","rev","x","hMap","cd","mb","s","length","l","co","le","rvb","sv","r_1","v","m","flt","fdt","flrm","fdrm","max","a","bits","d","p","o","bits16","inflt","dat","buf","st","sl","noBuf","noSt","cbuf","bl","nbuf","Math","set","final","f","pos","bt","lm","dm","lbt","dbt","n","tbts","t","subarray","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","sym","add","dsym","end","slc","et","td","TextDecoder","decode","stream","findSpan","u","U","low","high","mid","floor","calcKoverI","k","nom","denom","calcNURBSDerivatives","P","nd","Pders","du","CK","span","nders","zeroArr","ders","slice","ndu","left","right","saved","rv","lv","temp","s1","s2","rk","pk","j2","calcBasisFunctionDerivatives","Pw","point","clone","w","y","z","multiplyScalar","Vector4","calcBSplineDerivatives","Aders","wders","Vector3","sub","divideScalar","calcRationalCurveDerivatives","NURBSCurve","Curve","constructor","degree","knots","controlPoints","startKnot","endKnot","super","this","getPoint","optionalTarget","hpoint","N","calcBasisFunctions","C","Nj","wNj","NURBSUtils.calcBSplinePoint","getTangent","tangent","NURBSUtils.calcNURBSDerivatives","copy","normalize","fbxTree","connections","sceneGraph","FBXLoader","Loader","manager","load","url","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","parse","itemError","FBXBuffer","CORRECT","byteLength","convertArrayBufferToString","isFbxFormatBinary","BinaryParser","FBXText","text","cursor","read","offset","result","isFbxFormatASCII","Error","getFbxVersion","TextParser","textureLoader","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","FBXTreeParser","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","GeometryParser","parseScene","connectionMap","Map","Connections","forEach","rawConnection","fromID","toID","relationship","has","parents","children","parentRelationship","ID","get","push","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","parseInt","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","base64Content","image","parseImage","id","filename","split","pop","content","fileName","lastIndexOf","toLowerCase","getHandler","array","window","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","name","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","value","valueV","wrapS","RepeatWrapping","ClampToEdgeWrapping","wrapT","values","Scaling","repeat","Translation","currentPath","indexOf","extension","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","parameters","parseParameters","MeshPhongMaterial","MeshLambertMaterial","setValues","BumpFactor","bumpScale","Diffuse","color","Color","fromArray","convertSRGBToLinear","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","colorSpace","SRGBColorSpace","displacementMap","emissiveMap","normalMap","envMap","mapping","EquirectangularReflectionMapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","Matrix4","TransformLink","Indexes","Weights","bones","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","Group","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","connection","parent","bindSkeleton","addGlobalSceneSettings","traverse","node","userData","transformData","parentMatrix","matrix","parentMatrixWorld","matrixWorld","transform","generateTransform","applyMatrix4","updateWorldMatrix","animations","AnimationParser","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","Bone","PropertyBinding","sanitizeNodeName","originalName","getTransformData","bone","subBone","cameraAttribute","attr","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","OrthographicCamera","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","decay","PointLight","DirectionalLight","angle","PI","InnerAngle","MathUtils","degToRad","penumbra","OuterAngle","SpotLight","CastShadows","castShadow","geometry","DEFAULT_MATERIAL_NAME","attributes","vertexColors","FBX_Deformer","SkinnedMesh","normalizeSkinWeights","Mesh","reduce","geo","LineBasicMaterial","linewidth","Line","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","scale","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","target","position","lookAt","bindMatrices","parsePoseNodes","geoConnParent","bind","Skeleton","BindPoseNode","Pose","NbPoseNodes","poseNodes","PoseNode","Array","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","g","AmbientLight","unitScaleFactor","UnitScaleFactor","negativeMaterialIndices","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","BufferGeometry","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","Float32BufferAttribute","vertex","setAttribute","colors","Uint16BufferAttribute","weightsIndices","vertexWeights","normal","normalMatrix","Matrix3","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","UV","parseUVs","weightTable","index","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","data","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","getNormalNewell","vertices","current","next","getNormalTangentAndBitangent","normalVector","abs","cross","bitangent","flattenVertex","normalTangent","normalBitangent","Vector2","dot","triangles","triangulationInput","ShapeUtils","triangulateShape","i0","i1","i2","parentGeo","parentGeoNode","morphTargetsRelative","morphAttributes","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","Float32Array","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UVIndex","ColorNode","Colors","ColorIndex","toArray","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","isNaN","KnotVector","pointsValues","Points","Form","points","getPoints","setFromPoints","animationClips","rawClips","parseClips","key","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","match","curveNode","curves","rawCurves","animationCurve","times","KeyTime","convertFBXTimeToSeconds","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","toString","modelName","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","AnimationClip","decompose","Quaternion","T","Object","keys","positionTrack","generateVectorTrack","R","rotationTrack","generateRotationTrack","S","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","interpolateRotations","Euler","setFromEuler","invert","quaternion","euler","quaternionValues","QuaternionKeyframeTrack","premultiply","multiply","val","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","sort","targetIndex","lastValue","currentValue","prevValue","xIndex","yIndex","zIndex","time","xValue","yValue","zValue","curvex","curvey","curvez","initialValueRad","currentValueRad","valuesSpan","absoluteSpan","numSubIntervals","E1","E2","Q1","Q2","initialTime","timeSpan","Q","E","slerp","setFromQuaternion","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","FBXTree","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","connProps","from","to","rest","elem","append","parseNumberArray","parseNodeSpecialProperty","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","type2","flag","reader","BinaryReader","skip","version","getUint32","endOfContent","parseNode","size","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","encoding","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","out","zlv","fflate.unzlibSync","reader2","littleEndian","dv","DataView","_textDecoder","nullByte","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lParentLX","lGlobalT","setPosition","DEFAULT_ORDER","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","lParentTM","copyPosition","lParentGRSM","lParentGSM","lLSM","lGlobalRS","lParentLSM_inv","setFromMatrixScale","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","Enemy","scene","speed","THREE.BoxGeometry","THREE.MeshStandardMaterial","mesh","THREE.Mesh","patrolPoints","currentPoint","direction","detectionRange","isChasing","update","playerPosition","updatePatrol","updateChase","targetPoint","THREE.Vector3","min","distanceToPlayer","distanceTo","checkCollision","THREE.Scene","background","THREE.Color","camera","THREE.PerspectiveCamera","canvas","document","getElementById","body","innerHTML","renderer","THREE.WebGLRenderer","antialias","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","THREE.PCFSoftShadowMap","ambientLight","THREE.AmbientLight","directionalLight","THREE.DirectionalLight","shadow","mapSize","ui","createUIElements","ringCount","totalRings","timeRemaining","timerInterval","container","createElement","style","top","fontFamily","fontSize","textShadow","appendChild","ringCounter","textContent","timer","messageDisplay","display","setTotalRings","total","updateRingCounter","incrementRings","showMessage","stopTimer","startTimer","seconds","updateTimer","clearInterval","setInterval","hideMessage","reset","showError","message","level","rings","enemies","obstacles","platforms","levelData","loadLevel","levelNumber","response","fetch","ok","status","json","setupEnvironment","createTerrain","createRings","createEnemies","playerStart","error","environment","skyColor","ground","remove","groundGeometry","THREE.PlaneGeometry","groundSize","depth","groundMaterial","groundColor","roughness","obstacle","platform","terrain","platformData","THREE.MathUtils","obstacleData","THREE.CylinderGeometry","radius","ring","ringGeometry","THREE.TorusGeometry","ringMaterial","metalness","ringData","enemy","enemyData","checkRingCollisions","enemyCollision","checkEnemyCollisions","collected","visible","some","player","mixer","currentAction","turnSpeed","velocity","loadModel","loadAsync","setScalar","THREE.AnimationMixer","clipAction","playAnimation","THREE.Box3","setFromObject","getSize","collider","colliderSize","fadeOut","fadeIn","play","delta","keysPressed","applyQuaternion","addScaledVector","setFromCenterAndSize","getPosition","startPosition","gameOver","clock","THREE.Clock","resetGame","init","async","animate","requestAnimationFrame","getDelta","playerPos","setTimeout","idealOffset","idealLookat","playerRotation","applyAxisAngle","lerp","currentLookat","render","addEventListener","event","updateProjectionMatrix","preventDefault","then","catch"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}